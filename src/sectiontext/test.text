// group test

method describe(name,fn)

the first argument is group name
the second argument is function that contains expectation test

describe.only
describe.skip  also be used globally
describe method can be nested


.....................................

// file convention
file with .test.js or test.jsx suffix
files with .specs.js or specs.tsx suffix
files with .js or .tsx in _test_ folders.

recommendation  is to always put your test nest to the code they are testing so that relative
imports are shorter

/................................................../

//code coverage
a metric that can help you understand how much software code is tested

1. statement coverage:
how many of the statements in the software  code have been executed

2.Branches coverage:
 how many of the branches of the control structure (if statement for instance ) have been executed 

3.function coverage :
how many of defined HAVE BEEN called and finally

4. Linear coverage:
how many of lines of source code have been tested

add this line in packet.json
 "coverage": "npm test --coverage --watchAll"
 if do not work try this 
 "coverage": " npm run test -- --coverage --watchAll"

 --collectCoverageFrom='!src/components/**/*.{types,stories,constants,test,spec}.{ts,tsx}'


 //,..............................................,//

 Assertion:-
 when writing test, we often need to check that value meet certain conditions
 Assertion decide if a test passes of fails

 "expect method";
 expect(value)
 the argument should should value that code produces
 typically you will use expect along with "matcher" function to assert something about a value 
 a matcher can optically accept an argument which is correct expected value 

Custom matchers
toBeDisabled
toBeEnabled
toBeEmptyDOMElement
toBeInTheDocument
toBeInvalid
toBeRequired
toBeValid
toBeVisible
toContainElement
toContainHTML
toHaveAccessibleDescription
toHaveAccessibleErrorMessage
toHaveAccessibleName
toHaveAttribute
toHaveClass
toHaveFocus
toHaveFormValues
toHaveStyle
toHaveTextContent
toHaveValue
toHaveDisplayValue
toBeChecked
toBePartiallyChecked
toHaveErrorMessage

Deprecated matchers
toBeEmpty
toBeInTheDOM
toHaveDescription

